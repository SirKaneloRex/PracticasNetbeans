/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniencuesta;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julia
 */
public class Ventana1 extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana1() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        JRBwin = new javax.swing.JRadioButton();
        JRBlinux = new javax.swing.JRadioButton();
        JRBmac = new javax.swing.JRadioButton();
        JCBprogra = new javax.swing.JCheckBox();
        JCBdiseño = new javax.swing.JCheckBox();
        JCBadmin = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        JShoras = new javax.swing.JSlider();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LBLslidder = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(JRBwin);
        JRBwin.setText("Windows");

        buttonGroup1.add(JRBlinux);
        JRBlinux.setText("Linux");

        buttonGroup1.add(JRBmac);
        JRBmac.setText("Mac");

        JCBprogra.setText("Programacion");
        JCBprogra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBprograActionPerformed(evt);
            }
        });

        JCBdiseño.setText("Diseño Grafico");
        JCBdiseño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBdiseñoActionPerformed(evt);
            }
        });

        JCBadmin.setText("Administracion");

        JShoras.setMaximum(10);
        JShoras.setMinorTickSpacing(1);
        JShoras.setSnapToTicks(true);

        jLabel1.setText("Elije tu especialidad");

        jLabel2.setText("Elije un sistema operativo");

        jLabel3.setText("Horas que dedicas en el ordenador");

        LBLslidder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LBLslidder.setText("0");

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Sistema Operativo", "Programacion", "Diseño Grafico", "Administracion", "Horas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(LBLslidder, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(btnGenerar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(JShoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(JCBadmin)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(JRBwin)
                                                    .addComponent(JRBlinux, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(JRBmac, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addComponent(JCBprogra)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(JCBdiseño, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addComponent(jLabel2)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(13, 13, 13)
                                                    .addComponent(jLabel3))))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17)
                        .addComponent(JRBwin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JRBlinux)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JRBmac)
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JCBprogra)
                        .addGap(18, 18, 18)
                        .addComponent(JCBdiseño)
                        .addGap(18, 18, 18)
                        .addComponent(JCBadmin)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLslidder)
                            .addComponent(JShoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerar)))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JCBdiseñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBdiseñoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBdiseñoActionPerformed

    private void JCBprograActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBprograActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBprograActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed

        String admin="";
        String diseno="";
        String progra="";
          String sisOP="";
          String esp1="",esp2="",esp3="";
     
          
        if (JRBlinux.isSelected()) {
            sisOP = JRBlinux.getText();
        }
         if (JRBmac.isSelected()) {
             sisOP = JRBmac.getText();
        }
          if (JRBwin.isSelected()) {
             sisOP = JRBwin.getText();
        }
   
          if (JCBadmin.isSelected()) {
            esp1= JCBadmin.getText();
        }
          if (JCBdiseño.isSelected()) {
            esp2= JCBdiseño.getText();
        }

          if (JCBprogra.isSelected()) {
            esp3= JCBprogra.getText();
        }

         
          
        int horas = JShoras.getValue();
       String Shoras=String.valueOf(horas);
        LBLslidder.setText(Shoras);
        if (JCBdiseño.isSelected()) {
            diseno=  JCBdiseño.getText();
        }
        
      JOptionPane.showMessageDialog(null,"Tu sistema operativo preferido es: "+ sisOP+" tus especialidad son: " +esp1+"  " +esp2+ "  "+ esp3 +" y el numero de horas dedicadas al ordenador son:" +horas);

      
      
      
      
      
      
       String SisOP = "";
        String ESP1 = "";
        String ESP2 = "";
        String ESP3 = "";
        int HORAS;
        if (JRBwin.isSelected()) {

            SisOP = JRBwin.getText();

        } else if (JRBlinux.isSelected()) {
            SisOP = JRBlinux.getText();

        } else if (JRBmac.isSelected()) {

            SisOP = JRBmac.getText();
        }
        
        if(JCBprogra.isSelected()){
            ESP1="P";
        }else{
            ESP1="N";
        }
        if(JCBdiseño.isSelected()){
            ESP2="P";
        }else{
            ESP2="N";
        }
        if(JCBadmin.isSelected()){
            ESP3="P";
        }else{
            ESP3="N";
        }
        
       Connection conectar=null;
Ventana1 cc = new Ventana1();
        ResultSet rs = null;
 PreparedStatement ps = null;
             conectar = cc.conectar();
        
        String sql = "INSERT INTO respuestas(sSisOper, cProgra,cDiseno,cAdmon,iHoras) VALUES (?,?,?,?,?)";

        try {
            ps = conectar.prepareStatement(sql);
            ps.setString(1, SisOP);
            ps.setString(2, ESP1);
            ps.setString(3, ESP2);
            ps.setString(4, ESP3);
            ps.setInt(5, horas);
            ps.executeUpdate();

        } catch (SQLException ex) {
            System.err.println(ex);
            
        } finally {
            try {
                conectar.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
String sql2 = "SELECT * FROM encuesta.respuestas";

    String [] nombreColumnas={"id","sSisOper","cProgra","cDiseno","cAdmon","iHoras"};
        int i = 0;
    String [] registros= new String[6];
    DefaultTableModel modelo = new DefaultTableModel(null,nombreColumnas);
    try{
        conectar=cc.conectar();
        ps = conectar.prepareStatement(sql2);
        rs= ps.executeQuery();
        
        while(rs.next()){
            registros[0]=rs.getString("id");
            registros[1]=rs.getString("sSisOper");
            registros[2]=rs.getString("cProgra");
             registros[3]=rs.getString("cDiseno");
            registros[4]=rs.getString("cAdmon");
            registros[5]=rs.getString("iHoras");
            modelo.addRow(registros);
            
        }
        
        jTable1.setModel(modelo);
        
    }catch(SQLException e){
          e.printStackTrace();      
        }
        



//try{
//    
//
//        Statement statement = conectar.createStatement();
//            ResultSet resultSet = statement.executeQuery(sql2);
//            
//            // Crea el modelo de datos del JTable
//            DefaultTableModel tableModel = new DefaultTableModel();
//            ResultSetMetaData metaData = resultSet.getMetaData();
//            
//            // Agrega las columnas al modelo
//            int columnCount = metaData.getColumnCount();
//            for (int i = 1; i <= columnCount; i++) {
//                tableModel.addColumn(metaData.getColumnName(i));
//            }
//            
//            // Agrega las filas al modelo
//            while (resultSet.next()) {
//                Object[] row = new Object[columnCount];
//                for (int i = 1; i <= columnCount; i++) {
//                    row[i - 1] = resultSet.getObject(i);
//                }
//                tableModel.addRow(row);
//            }
//            
//            // Crea el JTable y muestra los datos
//                
//        
//        
//        }catch(SQLException e){
//          e.printStackTrace();      
//        }
//        
//        
        
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerarActionPerformed
  String database = "encuesta";
    String url = "jdbc:mysql://localhost:3306/";
    String user = "root";
    String password = "KaneloRex";
    String driver = "com.mysql.cj.jdbc.Driver";
    Connection cx;

    public final Connection conectar() {
        try {
            System.out.println("fase 1");
            Class.forName(driver);
            cx = DriverManager.getConnection(url + database, user, password);
            System.out.println("CONECTADO A " + database);
            
            
                System.out.println(database);
                System.out.println(url);
                System.out.println(user);
                System.out.println(password);
                
                
        } catch (SQLException | ClassNotFoundException ex) {
            System.err.println(ex);
        }
        return cx;
    }

    public void desconectar() {
        try {
            cx.close();
        } catch (SQLException ex) {
            System.err.println("ERROR 199923");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     Ventana1 vv = new Ventana1();
      vv.conectar();
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana1().setVisible(true);
            }
        });
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox JCBadmin;
    private javax.swing.JCheckBox JCBdiseño;
    private javax.swing.JCheckBox JCBprogra;
    private javax.swing.JRadioButton JRBlinux;
    private javax.swing.JRadioButton JRBmac;
    private javax.swing.JRadioButton JRBwin;
    private javax.swing.JSlider JShoras;
    private javax.swing.JLabel LBLslidder;
    private javax.swing.JButton btnGenerar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
